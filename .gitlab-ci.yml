stages:
  - test
  - build
#  - deploy

default:
  interruptible:                   true
  retry:
    max: 2
    when:
      - runner_system_failure
      - unknown_failure
      - api_failure

variables:
  KUBE_NAMESPACE:                  "matrixadminbot"
  CI_REGISTRY:                     "docker.io/paritytech"
  GIT_STRATEGY:                    fetch
  CI_IMAGE:                        node:16.10-alpine
  DOCKERHUB_REPO:                  "paritytech"
  IMAGE_NAME:                      docker.io/$DOCKERHUB_REPO/matrix-admin-bot
  DOCKER_TAG:                      "${CI_COMMIT_REF_NAME}"

.common-refs:                      &common-refs
  rules:
    - if: $CI_PIPELINE_SOURCE == "web"
    - if: $CI_PIPELINE_SOURCE == "schedule"
    - if: $CI_COMMIT_REF_NAME == "main"
    - if: $CI_COMMIT_REF_NAME =~ /^[0-9]+$/                         # PRs

.publish-refs:                     &publish-refs
  rules:
    - if: $CI_PIPELINE_SOURCE == "web" &&
          $CI_COMMIT_REF_NAME =~ /^v[0-9]+\.[0-9]+.*$/              # on tags (i.e. v1.0, v2.1rc1) and from web interface
    - if: $CI_COMMIT_REF_NAME =~ /^v[0-9]+\.[0-9]+.*$/              # on tags (i.e. v1.0, v2.1rc1)

.deploy-stg-refs:                  &deploy-stg-refs
  rules:
    - if: $CI_PIPELINE_SOURCE == "web" &&
          $CI_COMMIT_REF_NAME == "main"                             # on commits to main branch and from web interface
    - if: $CI_COMMIT_REF_NAME == "main"                             # on commits to main branch

.deploy-prod-refs:                 &deploy-prod-refs
  rules:
    - if: $CI_PIPELINE_SOURCE == "web" &&
          $CI_COMMIT_REF_NAME =~ /^v[0-9]+\.[0-9]+.*$/              # on tags (i.e. v1.0, v2.1rc1) and from web interface
    - if: $CI_COMMIT_REF_NAME =~ /^v[0-9]+\.[0-9]+.*$/              # on tags (i.e. v1.0, v2.1rc1)

.kubernetes-env:                   &kubernetes-env
  image:                           $CI_IMAGE
  tags:
    - kubernetes-parity-build

# template task for building and pushing an image
.build-push-docker-image:          &build-push-docker-image
  image:                           quay.io/buildah/stable
  script:
    - test "$Docker_Hub_User_Parity" -a "$Docker_Hub_Pass_Parity" ||
      ( echo "no docker credentials provided"; exit 1 )
    - buildah bud
      --format=docker
      --build-arg VCS_REF="${CI_COMMIT_SHA}"
      --build-arg BUILD_DATE="$(date -u '+%Y-%m-%dT%H:%M:%SZ')"
      --build-arg VERSION="${DOCKER_TAG}"
      --build-arg PROJECT_NAME="${CI_PROJECT_NAME}"
      --tag "$IMAGE_NAME:${DOCKER_TAG}"
      --tag "$IMAGE_NAME:latest"
      --file "$DOCKERFILE" .
    - echo "$Docker_Hub_Pass_Parity" |
      buildah login --username "$Docker_Hub_User_Parity" --password-stdin docker.io
    - buildah info
    - buildah push --format=v2s2 "$IMAGE_NAME:${DOCKER_TAG}"
    - buildah push --format=v2s2 "$IMAGE_NAME:latest"
  after_script:
    - buildah logout --all

# test that docker image can build

.build-only-docker-image:          &build-only-docker-image
  image:                           quay.io/buildah/stable
  script:
    - buildah bud
      --format=docker
      --build-arg VCS_REF="${CI_COMMIT_SHA}"
      --build-arg BUILD_DATE="$(date -u '+%Y-%m-%dT%H:%M:%SZ')"
      --build-arg PROJECT_NAME="${CI_PROJECT_NAME}"
      --tag "$IMAGE_NAME:latest"
      --file "$DOCKERFILE" .

check-linting:
  stage:                           test
  <<:                              *common-refs
  <<:                              *kubernetes-env
  script:
    - apk update && apk add --no-cache git
    - yarn --immutable
    - yarn lint

build-docker-bot:
  stage:                           build
  <<:                              *common-refs
  <<:                              *kubernetes-env
  <<:                              *build-only-docker-image
  variables:
    DOCKERFILE:                    "Dockerfile"


publish-docker-bot:
  stage:                           build
  <<:                              *publish-refs
  <<:                              *kubernetes-env
  <<:                              *build-push-docker-image
  variables:
    DOCKERFILE:                    "Dockerfile"

#### stage:                        deploy
#
#.deploy-k8s:                       &deploy-k8s
#  image:                           paritytech/kubetools:helm3
#  script:
#    - echo ${KUBE_NAMESPACE}
#    - echo ${CI_ENVIRONMENT_NAME}
#    - helm repo add parity https://paritytech.github.io/helm-charts/
#    - helm repo update
#    # install/upgrade
#    - helm upgrade matrix-admin-${CI_ENVIRONMENT_NAME} parity/tbd
#      --install
#      --atomic
#      --namespace ${KUBE_NAMESPACE}
#      --values kubernetes/matrix-admin-bot-values.yaml
#      --set bot.secret.ACCESS_TOKEN="${ACCESS_TOKEN}"
#      --set bot.image.dockerTag="${DOCKER_TAG}"
#
#bot:
#  stage:                           deploy
#  environment:
#    name:                          versi
#  <<:                              *deploy-stg-refs
#  <<:                              *kubernetes-env
#  <<:                              *deploy-k8s
